%For Problem 2: concate person's feture and movie feature together,
%using svm regression model(libsvm) to automaticly calculate the weight.
function [] = svm_regression_generator()
  dataset_path='../dataset/';
  %cd(dataset_path);
  load([dataset_path,'FilmFeature.mat']);                                                                          %load film info.
  load([dataset_path,'UserFeature.mat']);                                                                          %load film preference info.
  [udata,uitem,uuser]=fun_readFiles('../dataset/u.data','../dataset/u.item','../dataset/joblist.txt','../dataset/u.user');  %load user info.
  
  feat=zeros(size(udata,1),72);score=[];  %the svm regression feature and corresponding output score.
  for i=1:size(udata,1)
    rate_rec_tmp=udata(i,:);
    %disp(num2str(rate_rec_tmp(3)));
    feat_tmp=[UserAverScore(rate_rec_tmp(1),:),  ...                                          %user-preference info.
              get_user_age_info(rate_rec_tmp(1),uuser),...                                  %user-age info.
              get_user_job_info(rate_rec_tmp(1),uuser),...                                  %user-job info.
              FilmScore_Age(rate_rec_tmp(2),:),...                                            %film-age score.
              FilmScore_Occupation(rate_rec_tmp(2),:)];                                       %film-occupation socre.
     feat(i,:)=feat_tmp;
    % score=[score;rate_rec_tmp(3)];                                                         %film's final score.
     score(i,:)=rate_rec_tmp(3);
  end
  
  score=score(1:5000,:);
  feat=feat(1:5000,:);
  save([dataset_path,'regression_score.mat'],'score');
  save([dataset_path,'regression_feat.mat'],'feat');
 %[bestmse,bestc,bestg] = psoSVMcgForRegress(score,feat);
  %cmd = ['-v 3 -c ', num2str(2^log2c), ' -g ', num2str(2^log2g) , ' -s 3 -p 0.4 -n 0.1'];
  cmd = [' -s 0  -p 0.4 -h 0'];
  model = svmtrain(score(1:5000,:), feat(1:5000,:), cmd);
  [predict,accuracy] = svmpredict(score(5000:6000,:),feat(5000:6000,:),model);
  predict=round(predict);
  compare=[predict,score(5000:6000)];
  
  right=0;
  for i=1:size(compare,1)
     if (compare(i,1)==compare(i,2))
         right=right+1;
     end
  end
  
  disp(num2str(right/size(compare,1)));
end

function [age_feat]=get_user_age_info(userid,uuser)
  age_feat=zeros(1,6);
  age_feat(1,fun_ageSegmentation(uuser(userid,2)))=1;
end

function [job_feat]=get_user_job_info(userid,uuser)
  job_feat=zeros(1,21);
  job_feat(1,uuser(userid,3))=1;
end


